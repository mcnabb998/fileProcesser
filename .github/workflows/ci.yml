name: CI
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
permissions:
  contents: read
jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Validate workflow
        uses: rhysd/actionlint@v1.6.27
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - uses: aws-actions/setup-sam@v2
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
            | sh -s -- -b $(go env GOPATH)/bin v1.55.2
      - name: Go mod tidy check
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum
      - name: Lint
        run: |
          export PATH="$(go env GOPATH)/bin:$PATH"
          golangci-lint run
      - name: Compile
        run: make build
      - name: Unit tests
        run: go test -coverprofile=coverage.out ./...
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Validate profiles
        run: |
          for f in sample-profiles/*.json; do
            jq empty "$f"
          done
      - name: Validate schema
        run: |
          pip install jsonschema
          python -c "import json, jsonschema, glob; schema=json.load(open('schema/profile_v2.schema.json')); [jsonschema.validate(json.load(open(f)), schema) for f in glob.glob('sample-profiles/*.json')]; print('schema ok')"
      - name: SAM validate
        run: sam validate --region us-east-1
      - name: Ensure bin directory exists
        run: mkdir -p ./bin
      # Removed redundant Build binaries step
  integration-test:
    needs: unit-test
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:24-dind
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - name: Start stack
        run: make up
      - name: Run tests
        run: |
          E2E=1 go test ./tests/e2e -v 2>&1 | tee test.log
          go-junit-report < test.log > e2e-report.xml
      - name: Stop stack
        run: make down
      - uses: actions/upload-artifact@v3
        with:
          name: e2e-report
          path: e2e-report.xml
  sam-deploy-dev:
    needs: integration-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
      - name: SAM build
        run: sam build
      - name: Dev deploy
        if: github.ref == 'refs/heads/main'
        run: sam deploy --config-env dev --no-confirm-changeset --no-fail-on-empty-changeset
      - name: Smoke invoke
        if: github.ref == 'refs/heads/main'
        run: sam local invoke GuardDuplicate --event testdata/s3_event.json
      - name: Prod deploy
        if: startsWith(github.ref, 'refs/tags/')
        run: sam deploy --config-env prod --no-confirm-changeset --no-fail-on-empty-changeset
